#!/usr/bin/env perl
#
# vim: set ts=4:noet
#
# sboclean
# script to clean stuff left around from sbotools.
#
# author: Jacob Pipkin <j@dawnrazor.net>
# date: Boomtime, the 6th day of Confusion in the YOLD 3178
# license: WTFPL <http://sam.zoy.org/wtfpl/COPYING>

use 5.12.3;
use strict;
use warnings FATAL => 'all';
use SBO::Lib;
use File::Basename;
use Getopt::Long qw(:config bundling);
use File::Path qw(remove_tree);

my $self = basename ($0);

sub show_usage () {
	print <<EOF
Usage: $self (options) [package]

Options:
  -h|--help:
    this screen.
  -v|--version:
    version information.
  -d|--clean-dist:
    clean distfiles.
  -w|--clean-work:
    clean working directories.
  -i|--interactive:
    be interactive.

EOF
}

my ($help, $vers, $clean_dist, $clean_work, $interactive);

GetOptions (
	'help|h'		=> \$help,
	'version|v'		=> \$vers,
	'clean-dist|d'	=> \$clean_dist,
	'clean-work|w'	=> \$clean_work,
	'interactive|i'	=> \$interactive,
);

show_usage && exit 0 if $help;
show_version && exit 0 if $vers;

unless ($clean_dist || $clean_work) {
	show_usage, die "You must specify at least one of -d or -w.\n";
}

sub remove_stuff ($) {
	exists $_[0] or script_error 'remove_stuff requires an argument';
	-d $_[0] or say "Nothing to do." and return 1;
	my $dir = shift;
	opendir (my $dh, $dir);
	FIRST: while (my $ls = readdir $dh) {
		next FIRST if $ls =~ /^(\.){1,2}$/;
		my $full = "$dir/$ls";
		if ($interactive) {
			print "Remove $full? [n] ";
			next FIRST unless <STDIN> =~ /^[Yy]/;
		}
		unlink $full if -f $full;
		remove_tree ($full) if -d $full;
	}
}

remove_stuff $config{SBO_HOME} . '/distfiles' if $clean_dist;
remove_stuff '/tmp/SBo' if $clean_work;

exit 0;
