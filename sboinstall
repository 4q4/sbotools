#!/usr/bin/env perl
#
# vim: set ts=4:noet
#
# sboinstall
# script to install a SlackBuild by name
#
# author: Jacob Pipkin <j@dawnrazor.net>
# date: Pungenday, the 40th day of Discord in the YOLD 3178
# license: WTFPL <http://sam.zoy.org/wtfpl/COPYING>

use 5.12.3;
use SBO::Lib;
use Getopt::Std;
use File::Basename;
use strict;
use warnings FATAL => 'all';

my $self = basename ($0);

sub show_usage () {
	print <<EOF
Usage: $self [options] sbo

Options:
  -h: this screen.
  -v: version information.
  -c: do not clean working files/directories after the build.                   
  -d: clean distfiles afterward. 
  -i: do not run installpkg at the end of the build process.
  -j: specify "-j" setting to make, for multicore systems; overrides conf file.
  -p: install an SBo as a -compat32 pkg on a multilib x86_64 system.
  -r: skip viewing of the SBo README.
  -R: view the README but do not attempt to parse requirements.

EOF
}

my %options;
getopts ('hvcdripj:R', \%options);

show_usage and exit 0 if exists $options{h};
show_version and exit 0 if exists $options{v};

show_usage and exit 0 unless exists $ARGV[0];

# setup any options which do not require arguments
my @opts1 = ('c', 'd', 'r', 'i', 'p', 'R');
for my $opt (@opts1) {
	unshift @ARGV, "-$opt" if exists $options{$opt};
}

# setup any options which do require arguments
my @opts2 = ('j');
for my $opt (@opts2) {
	unshift @ARGV, "-$opt $options{$opt}" if exists $options{$opt};
}

system '/usr/sbin/sboupgrade', '-oN', @ARGV;

exit 0;
